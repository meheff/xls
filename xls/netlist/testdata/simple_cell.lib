// Copyright 2021 The XLS Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

library(simple_cell) {
  delay_model    : table_lookup;
  time_unit      : "1ns";

  /* Inverter */
  cell(inv) {
    area : 0;
    pin(A) {
      direction : input;
    }

    pin(Y) {
      direction : output;
      function : "A'";
    }
  }

  cell(buffer) {
    area : 0;
    pin(A) {
      direction : input;
    }
    pin(Y) {
      direction : output;
      function : "A";
    }
  }

  /* 2-input AND gate */
  cell(and2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A * B)";
    }
  }

  /* 2-input NAND gate */
  cell(nand2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A * B)'";
    }
  }

  /* 2-input OR gate */
  cell(or2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A + B)";
    }
  }

  /* 2-input ANDYN gate */
  cell(andyn2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A * (B'))";
    }
  }

  /* 2-input ANDNY gate */
  cell(andny2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "((A') * B)";
    }
  }

  /* 2-input ORYN gate */
  cell(oryn2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A + (B'))";
    }
  }

  /* 2-input ORNY gate */
  cell(orny2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "((A') + B)";
    }
  }

  /* 2-input NOR gate */
  cell(nor2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A + B)'";
    }
  }

  /* 2-input XOR */
  cell(xor2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A * (B')) + ((A') * B)";
    }
  }

  /* 2-input XNOR */
  cell(xnor2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "((A * (B')) + ((A') * B))'";
    }
  }

  /* 2-input MUX */
  cell(imux2) {
    area : 100;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(S) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A * S) + (B * (S'))";
    }
  }
} /* end */
