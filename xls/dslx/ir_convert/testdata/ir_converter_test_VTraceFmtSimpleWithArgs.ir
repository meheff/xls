package test_module

file_number 0 "test_module.x"

fn __itok__test_module__main(__token: token id=1, __activated: bits[1] id=2) -> (token, ()) {
  literal.5: bits[8][5] = literal(value=[119, 111, 114, 108, 100], id=5)
  literal.8: bits[32] = literal(value=0, id=8)
  literal.10: bits[32] = literal(value=1, id=10)
  literal.12: bits[32] = literal(value=2, id=12)
  literal.14: bits[32] = literal(value=3, id=14)
  literal.16: bits[32] = literal(value=4, id=16)
  foo: bits[32] = literal(value=3, id=4)
  literal.6: bits[32] = literal(value=1, id=6)
  array_index.9: bits[8] = array_index(literal.5, indices=[literal.8], id=9)
  array_index.11: bits[8] = array_index(literal.5, indices=[literal.10], id=11)
  array_index.13: bits[8] = array_index(literal.5, indices=[literal.12], id=13)
  array_index.15: bits[8] = array_index(literal.5, indices=[literal.14], id=15)
  array_index.17: bits[8] = array_index(literal.5, indices=[literal.16], id=17)
  add.7: bits[32] = add(foo, literal.6, id=7)
  trace.18: token = trace(__token, __activated, format="Hello [{}, {}, {}, {}, {}] {:x}!", data_operands=[array_index.9, array_index.11, array_index.13, array_index.15, array_index.17, add.7], verbosity=5, id=18)
  after_all.20: token = after_all(trace.18, id=20)
  tuple.19: () = tuple(id=19)
  VERBOSITY: bits[32] = literal(value=4, id=3)
  ret tuple.21: (token, ()) = tuple(after_all.20, tuple.19, id=21)
}

fn __test_module__main() -> () {
  after_all.22: token = after_all(id=22)
  literal.23: bits[1] = literal(value=1, id=23)
  invoke.24: (token, ()) = invoke(after_all.22, literal.23, to_apply=__itok__test_module__main, id=24)
  ret tuple_index.25: () = tuple_index(invoke.24, index=1, id=25)
}
