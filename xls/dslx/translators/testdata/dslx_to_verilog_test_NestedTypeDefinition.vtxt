package test_pkg;
  // DSLX Type: struct Point {
  //     x: u16,
  //     y: u32,
  // }
  typedef struct packed {
    logic [15:0] x;
    logic [31:0] y;
  } Point;

  // DSLX Type: enum Option : u5 {
  //     ZERO = 0,
  //     ONE = 1,
  // }
  typedef enum logic [4:0] {
    ZERO = 5'h00,
    ONE = 5'h01
  } Option;

  // DSLX Type: type AliasType = Point;
  typedef Point AliasType;

  // DSLX Type: type AliasType1 = Point[1];
  typedef Point [0:0] AliasType1;

  // DSLX Type: type AliasType2 = uN[100];
  typedef logic [99:0] AliasType2;

  // DSLX Type: struct TopType {
  //     a: Point,
  //     b: Option,
  //     c: AliasType,
  //     d: AliasType1,
  //     e: AliasType2,
  // }
  typedef struct packed {
    Point a;
    Option b;
    AliasType c;
    AliasType1 d;
    AliasType2 e;
  } TopType;
endpackage
